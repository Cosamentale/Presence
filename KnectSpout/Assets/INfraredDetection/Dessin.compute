#pragma kernel CSMain
#pragma kernel CSMain_t3
Texture2D<float4> reader;
Texture2D<float4> reader2;
RWTexture2D<float4> writer;
SamplerState _LinearRepeat;

RWStructuredBuffer<float> t3Buffer;
RWStructuredBuffer<float> t3Buffer2;
float t3Array[5];
float _time;
float _blur;
float _reg01;
float _reg02;
float _reg03;
float _c1;
float _c2;
float _c3;
int _taille;
float _resx;
float _resy;
#define Pi 3.14159265359
[numthreads(8,8,1)]
void CSMain(uint2 id : SV_DispatchThreadID)
{
	float2 f = float2(id.x, id.y);
	float2 res = float2(_resx, _resy);
	float2 uv = f / res;


	float vid = reader2.SampleLevel(_LinearRepeat, uv + 0.5 / res, 0).x;
	float prev = reader.SampleLevel(_LinearRepeat, uv + 0.5 / res, 0).a;

	float diff = abs(vid - prev);
	float c1 = lerp(1.,2.,_c2)*lerp(1.,-1.,smoothstep(0.6,0.8,_c1))*_reg01;
	diff = smoothstep(0.2, 0.5, diff);
	diff = max(diff, reader.SampleLevel(_LinearRepeat, uv + 0.5 / res+float2(c1/res.x,0.), 0).x);

	float d1 = distance(uv.x, frac(_time*_reg02));
	float pt2 = smoothstep(0.002, 0.001, d1);
    writer[id] = float4(diff, pt2,diff, lerp(prev, vid, 0.5))*step(c1, f.x)*step(f.x, _resx - c1);
}
[numthreads(8, 8, 1)]
void CSMain_t3(uint2 id : SV_DispatchThreadID)
{
	//float2 res = float2(512., 424.);
	float t3 = reader.SampleLevel(_LinearRepeat, float2(frac(_time),0.5) , 0).x;

	for (int i = 0; i < _taille; i++) {
		t3Buffer2[i] =reader.SampleLevel(_LinearRepeat, float2(frac(_time*_reg02), float(i)/_taille + 0.5 / _taille), 0).x;
	}
	t3Buffer[id.x] = t3;
	
}
